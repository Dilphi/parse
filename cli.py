import db
import parse
import sys

def show_main_menu():
    print("\n=== –ù–æ–≤–æ—Å—Ç–∏ –ú–ò–¢–£ ‚Äî CLI ===")
    print("1. –û–±–Ω–æ–≤–∏—Ç—å/–ü–∞—Ä—Å–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ (–∏–∑ —Å–µ—Ç–∏)")
    print("2. –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π")
    print("q. –í—ã—Ö–æ–¥")
    print("==========================")

def show_news_list():
    rows = db.list_news()
    if not rows:
        print("–°–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –ø—É—Å—Ç. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø–∞—Ä—Å–µ—Ä (1).")
        return
    print("\n–°–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π:")
    for r in rows:
        print(f"{r[0]}. {r[1]} ‚Äî {r[2]}")
    print("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –Ω–æ–≤–æ—Å—Ç–∏ —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å (–∏–ª–∏ 'b' ‚Äî –Ω–∞–∑–∞–¥, 'q' ‚Äî –≤—ã—Ö–æ–¥).")

def view_article(news_id: int):
    meta = db.get_news_meta(news_id)
    if not meta:
        print("–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return
    print(f"\nüìå {meta[1]} ‚Äî {meta[2]}")
    content = db.get_latest_article_text(news_id)
    if not content:
        print("–¢–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏ –ø—É—Å—Ç –∏–ª–∏ –Ω–µ –±—ã–ª —Å–∫–∞—á–∞–Ω.")
    else:
        # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ N —Å–∏–º–≤–æ–ª–æ–≤ —Å –æ–ø—Ü–∏–µ–π –ø–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ
        pos = 0
        page_len = 1500
        while True:
            chunk = content[pos:pos+page_len]
            print("\n" + chunk)
            pos += page_len
            if pos >= len(content):
                print("\n--- –ö–æ–Ω–µ—Ü —Å—Ç–∞—Ç—å–∏ ---")
                break
            cmd = input("\n–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, 'b' ‚Äî –Ω–∞–∑–∞–¥, 's' ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª, 'q' ‚Äî –≤—ã—Ö–æ–¥: ").strip().lower()
            if cmd == "b":
                return
            if cmd == "s":
                with open("article.txt", "w", encoding="utf-8") as f:
                    f.write(f"{meta[1]}\n{meta[2]}\n\n{content}")
                print("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ article.txt")
            if cmd == "q":
                sys.exit(0)
        # –≤ –∫–æ–Ω—Ü–µ –¥–∞—ë–º –æ–ø—Ü–∏–∏
        cmd = input("\n'b' ‚Äî –Ω–∞–∑–∞–¥, 's' ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª, 'q' ‚Äî –≤—ã—Ö–æ–¥: ").strip().lower()
        if cmd == "s":
            with open("article.txt", "w", encoding="utf-8") as f:
                f.write(f"{meta[1]}\n{meta[2]}\n\n{content}")
            print("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ article.txt")
        if cmd == "q":
            sys.exit(0)

def main():
    db.init_db()
    while True:
        show_main_menu()
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é: ").strip().lower()
        if choice == "1":
            print("–ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞... (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å —Å–µ–∫—É–Ω–¥—ã)")
            parse.main()
            input("–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")
        elif choice == "2":
            while True:
                show_news_list()
                cmd = input("–í–∞—à –≤–≤–æ–¥: ").strip().lower()
                if cmd == "b":
                    break
                if cmd == "q":
                    print("–í—ã—Ö–æ–¥.")
                    sys.exit(0)
                try:
                    nid = int(cmd)
                    view_article(nid)
                except ValueError:
                    print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –Ω–æ–≤–æ—Å—Ç–∏, 'b' –∏–ª–∏ 'q'.")
        elif choice == "q":
            print("–í—ã—Ö–æ–¥.")
            break
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")

if __name__ == "__main__":
    main()
